---
import BaseLayout from "../layouts/BaseLayout.astro";
import { LoginForm } from "../components/auth/LoginForm";
import { TestLoginErrorDisplay } from "../components/testing/TestLoginErrorDisplay";
import { AuthProvider } from "../context/AuthContext";
import { createSupabaseServerClient } from "../lib/supabase.server";

// Only show dev tools in development
const isDev = import.meta.env.DEV;

// Determine if we're in test mode
const isTestMode = Astro.url.searchParams.get("test-mode") === "true";

// Disable pre-rendering to ensure auth state is always current
export const prerender = false;

// Get redirectUrl from query params
const redirectUrl = Astro.url.searchParams.get("redirect") || "/dashboard";

// Support non-JavaScript users with HTML form handling
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return new Response("Email and password are required", { status: 400 });
    }

    const supabase = createSupabaseServerClient({
      cookies: Astro.cookies,
      headers: Astro.request.headers,
    });

    const { data, error } = await supabase.auth.signInWithPassword({
      email,
      password,
    });

    if (error) {
      // Return to login page with error details for better user feedback
      return Astro.redirect(`/login?error=${encodeURIComponent(error.message)}&redirect=${redirectUrl}`);
    }

    // Redirect authenticated users to their intended destination
    return Astro.redirect(redirectUrl);
  } catch (error) {
    console.error("Login error:", error);
    return Astro.redirect(`/login?error=Unexpected%20error&redirect=${redirectUrl}`);
  }
}

// Prevent authenticated users from accessing login page
const supabase = createSupabaseServerClient({
  cookies: Astro.cookies,
  headers: Astro.request.headers,
});

const {
  data: { user },
} = await supabase.auth.getUser();

// Redirect authenticated users to their intended destination
if (user) {
  return Astro.redirect(redirectUrl);
}

// Display any auth errors from previous attempts
const error = Astro.url.searchParams.get("error");
---

<BaseLayout title="Logowanie">
  <div class="container mx-auto py-12 px-4">
    <div class="max-w-md mx-auto">
      <h1 class="text-3xl font-bold tracking-tight mb-6 text-center">Logowanie</h1>

      {
        error && (
          <div
            class="bg-destructive/10 text-destructive rounded-md p-3 mb-4 text-sm"
            data-testid="error-message"
            aria-live="polite"
          >
            {decodeURIComponent(error)}
          </div>
        )
      }

      <!-- Test-specific error display component, only rendered in test mode -->
      {isTestMode && <TestLoginErrorDisplay client:load />}

      <!-- Standard form with AuthContext -->
      <div>
        <AuthProvider client:load>
          <LoginForm client:load redirectUrl={redirectUrl} />
        </AuthProvider>
      </div>

      <!-- Fallback for users with JavaScript disabled -->
      <noscript>
        <form method="POST" class="space-y-4 border p-4 rounded-md mt-4">
          <div class="text-sm text-muted-foreground mb-4">
            JavaScript is disabled. Using a simple HTML form instead.
          </div>
          <div class="space-y-2">
            <label for="email" class="text-sm font-medium">Email</label>
            <input
              type="email"
              name="email"
              id="email"
              required
              class="flex h-9 w-full rounded-md border border-input px-3 py-1 text-sm shadow-sm"
            />
          </div>
          <div class="space-y-2">
            <label for="password" class="text-sm font-medium">Hasło</label>
            <input
              type="password"
              name="password"
              id="password"
              required
              class="flex h-9 w-full rounded-md border border-input px-3 py-1 text-sm shadow-sm"
            />
          </div>
          <button
            type="submit"
            class="inline-flex h-9 items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground w-full"
          >
            Zaloguj się
          </button>
        </form>
      </noscript>
    </div>
  </div>

  <script>
    // Simple script to verify JavaScript is running
    document.addEventListener("DOMContentLoaded", () => {
      console.log("JavaScript is running on login page");
      const testElement = document.getElementById("js-test");
      if (testElement) {
        testElement.textContent = "JavaScript działa poprawnie! ✅";
        testElement.style.backgroundColor = "#d1fae5";
      }
    });
  </script>
</BaseLayout>
